// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: copyfrom.go

package repository

import (
	"context"
)

// iteratorForAddLinkToCategory implements pgx.CopyFromSource.
type iteratorForAddLinkToCategory struct {
	rows                 []AddLinkToCategoryParams
	skippedFirstNextCall bool
}

func (r *iteratorForAddLinkToCategory) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForAddLinkToCategory) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].LinkID,
		r.rows[0].CategoryID,
	}, nil
}

func (r iteratorForAddLinkToCategory) Err() error {
	return nil
}

// Associate a link with a category
//
//  INSERT INTO link_category_map (link_id, category_id) VALUES ($1, $2)
func (q *Queries) AddLinkToCategory(ctx context.Context, arg []AddLinkToCategoryParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"link_category_map"}, []string{"link_id", "category_id"}, &iteratorForAddLinkToCategory{rows: arg})
}
